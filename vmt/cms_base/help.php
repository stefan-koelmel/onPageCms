<?php // charset:UTF-8function helpExist() {}function reloadPage($goWebPage,$seconds=0) {    // echo ("reloadPage($goWebPage,$seconds) <br>");    if ($seconds > 0) {        echo ("<script type='text/javascript'>function a(){window.location.href='".$goWebPage."';} setTimeout('a()',".($seconds*1000).");</script>");    } else {        echo ("<script type='text/javascript'>window.location.href='".$goWebPage."';</script>");    }}function str2Array($str) {    if (is_array($str)) return $str;    //while ($str[0] != "a") $str = substr($str,1);    $ar = unserialize($str);    if (!is_array($ar)) {        $str = php_unclearStr($str);        //if ($str[0] != "a") {            // while ($str[0] != "a") $str = substr($str,1);        //}        // $str = str_replace("&#034;", '"', $str);        $ar = unserialize($str);        if (!is_array($ar)) {            $offSetSemi = strpos($str,";");            $offSetKlammerEnd = strpos($str,"}");          //   $str = "'''%,`";//            echo ("Str before $str<br>");//            $encodeStr = urlencode($str);//            echo ("Str url $encodeStr<br>");//            $str = urldecode($encodeStr);//            echo ("Str after $str<br>");           //  echo ("No Array ".$ar."-".$str." <br>");            if ($offSetKlammerEnd < $offSetSemi) {                $offSetKlammerStart = strpos($str,"{");                $klammerInhalt = subStr($str,$offSetKlammerStart,($offSetKlammerEnd-$offSetKlammerStart));                echo ("KlammerInhalt :'$klammerInhalt'<br>");            }        }    }    return $ar;}function array2Str($ar) {    $str = serialize($ar);    // echo ("$str <br>");    return $str;}function show_array($ar,$level=0,$maxLevel=1000) {    if (!$maxLevel) $maxLevel = 1000;    if ($level>0) echo ("<b>show_array($ar) - level=$level</b>");    else {        if (is_array($ar)) echo ("<b>show_array($ar)</b>");        else echo ("<b>show_array->noArray '$ar'</b>");    }    if (is_array($ar) AND count($ar)) {        foreach($ar as $key => $value) {            if (is_array($value)) {                echo ("<div style='padding-left:".($level*20)."px;'>");                $newLevel = $level+1;                echo ("$key = Array ($newLevel) -count= ".count($value));                if ($newLevel > $maxLevel) {                    echo (" .... ");                    echo ("</div>\n");                } else {                    echo ("</div>\n");                    show_array($value,$newLevel,$maxLevel);                }            } else {                echo ("<div style='padding-left:".($level*20)."px;'>");                $type = "";                if (is_string($value)) $type = "string";                if (is_integer($value)) $type = "integer";                switch ($type) {                    case "string" : echo ("$key = '$value'"); break;                    case "integer" : echo ("$key = $value (int)"); break;                    default:                       echo ("$key = '$value'");                }                echo ("</div>\n");            }        }    }}function php_clearQuery($data) {    if (!is_array($data)) return $data;    if (!count($data)) return $data;    foreach ($data as $key => $value) {               switch ($key) {            case "data" :                $dataArray = str2Array($data[data]);                if (is_array($dataArray)) {                    $data[data] = array();                    foreach ($dataArray as $key2 => $value2) {                        $data[data][$key2] = php_unclearStr($value2);                    }                }                break;            default :                 if (is_string($value)) {                    // $value = iconv("ISO-8859-15","UTF-8",$value);                    $value = str_replace("\'","&#039;", $value);                    $value = str_replace('\"',"&#034;", $value);                    $value = str_replace("'","&#039;", $value);                    $value = str_replace('"',"&#034;", $value);                    $data[$key] = $value;                 }        }    }    return $data;}function php_clearPost($saveData) {    foreach ($saveData as $key => $value ) {        if (is_string($value)) {            $value = str_replace("\'","&#039;", $value);            $value = str_replace('\"',"&#034;", $value);               // $value = str_replace("'", "anfkurz" ,$value);               //  $value = str_replace('"', "anfdoppel" ,$value);               //  $value = htmlspecialchars($value);            // echo ("post $key = --$value-- <br>");            $saveData[$key] = $value;        }        if (is_array($value)) {            $saveData[$key] = php_clearPost($value);        }    }    return $saveData;}function php_clearOutPut($str,$linebreak=1) {            $replace = array(); // array("&"); // ,"\r");    $repWith = array(); // array("&#038;"); //,"&nbsp;<br/>");    //    $offSet_amp = strpos($str,"&");//    while (is_int($offSet_amp)) {//       $change = 1;//       if ($str[$offSet_amp+1] = "#") $change =0;//       else {//           //            echo ("Zeichen ist & '$str[$offSet_amp]' - nächstes ist '".$str[$offSet_amp+1]."'<br>");//       }//       //       $offSet_amp = strpos($str,"&",$offSet_amp+1);//        //    }           // $replace = array("&"); // ,"\r");   // $repWith = array("&amp;");                 if ($linebreak) {        $replace[] = "\r";        $repWith[] = "&nbsp;<br/>";    }            $str = str_replace($replace, $repWith, $str);            // BOLD    $offSet_bold = strpos($str,"#f#");    $open_bold = 0;    while (is_int($offSet_bold)) {        if ($open_bold) {            $add ="</b>";            $open_bold = 0;        } else {            $add = "<b>";            $open_bold = 1;        }        $str = substr($str,0,$offSet_bold).$add.substr($str,$offSet_bold+3);                $offSet_bold = strpos($str,"#f#");            }    if ($open_bold)  $str.="</b>";        $formatStr = "Formatierung: <br><b>Fett</b> = #f# Fett #f#<br><i>Kursiv</i> = #k# kursiv #k#";    $formatStr .= "<br>&sbquo;einfache Anführungszeichen&lsquo; => #a# Text #a#";    $formatStr .= "<br>&bdquo;doppelte Anführungszeichen&ldquo; => #A# Text #A#";                // kleine Anführungszeichen    $offSet_quote = strpos($str,"#a#");    $open_quote = 0;    while (is_int($offSet_quote)) {        if ($open_quote) {            $add = "&lsquo;";            $open_quote = 0;        } else {            $add ="&sbquo;";             $open_quote = 1;        }        $str = substr($str,0,$offSet_quote).$add.substr($str,$offSet_quote+3);                $offSet_quote = strpos($str,"#a#");            }    if ($open_quote) $str.="&lsquo;";         // doppelte Anführungszeichen    $offSet_quote = strpos($str,"#A#");    $open_quote = 0;    while (is_int($offSet_quote)) {        if ($open_quote) {            $add = "&ldquo;";            $open_quote = 0;        } else {            $add ="&bdquo;";             $open_quote = 1;        }        $str = substr($str,0,$offSet_quote).$add.substr($str,$offSet_quote+3);                $offSet_quote = strpos($str,"#A#");            }    if ($open_quote) $str.="&ldquo;";            // kursiv    $offSet_italic = strpos($str,'#k#');    $open_italic = 0;    while (is_int($offSet_italic)) {        if ($open_italic) {            $add = "</i>";                       $open_bold = 0;        } else {            $add ="<i>";             $open_italic = 1;        }        $str = substr($str,0,$offSet_italic).$add.substr($str,$offSet_italic+3);                $offSet_italic = strpos($str,'#k#');            }    if ($open_italic) $str.= "</i>";    //    echo ("After <br>");//    $offSet_amp = strpos($str,"&");//    while (is_int($offSet_amp)) {//       $change = 1;//       if ($str[$offSet_amp+1] = "#") $change =0;//       else {//           //            echo ("Zeichen ist & '$str[$offSet_amp]' - nächstes ist '".$str[$offSet_amp+1]."'<br>");//       }//       //       $offSet_amp = strpos($str,"&",$offSet_amp+1);//        //    }       return $str;}function php_clearLink($str) {    $str = htmlspecialchars($str);    return $str;}function php_unClearLink($str) {    $str = htmlspecialchars_decode($str);    return $str;}function php_addUrl($goPage,$addUrl="") {    if (!$addUrl) return $goPage;    if ($addUrl[0] == "?") $addUrl = substr($addUrl,1);    if ($addUrl[0] == "&") $addUrl = substr($addUrl,1);        if (is_int(strpos($goPage,"?"))) {        return $goPage."&".$addUrl;    } else {        return $goPage."?".$addUrl;    }    }function php_checkUrl($url) {     if (substr($url,0,7) == "http://") $url = substr($url,7);            $wwwSplit = explode(".",$url);    switch (count($wwwSplit)) {        case 1 :            $url = ""; // nur 1 punkt -> keine URL            return 0;            break;        case 2 :            $url = "www.".$url;            break;                }    $url = "http://".$url;    return $url;}function php_externalLinkTarget() {    return "external";} function php_link_get($url) {    //echo ("external_link_get($url)<br>");    $url = str_replace(array("/r"," "),"",$url);    $target = php_externalLinkTarget();    $res = array();    $linkList = explode("*",$url);    for ($i=0;$i<count($linkList);$i++) {        $linkStr = $linkList[$i];        if ($linkStr) {            $linkData = explode("#",$linkStr);            $url = php_checkUrl($linkData[0]);            // echo ("get Url='$url'<br>");            if ($url) {                $linkName = $linkData[1];                $linkTarget = $linkData[2];                if (!$linkTarget) $linkTarget = $target;                $res[] = array("url"=>$url,"name"=>$linkName,"target"=>$linkTarget);            }        }    }    return $res; }function php_clearStr($str) {    $str = str_replace("\'","&#039;", $str);    $str = str_replace("'","&#039;", $str);    $str = str_replace('\"',"&#034;", $str);    $str = str_replace('"',"&#034;", $str);    //$str = str_replace("?","&#180;", $str);    // $str = $str_replace("?",)    $str = str_replace('`',"&#096;", $str);    $str = str_replace("°","&deg;" , $str);    $str = str_replace("?","&#063;", $str);           //$str2Empty = array("+/", "\r\n", "\t", "\n");    // if (!$dontClearBreak) $str2Empty[] = "\r";    // $str = str_replace($str2Empty, " ", $str);    return $str;}function php_unclearStr($str,$debug=0) {    if ($debug) { $before = strlen($str); $beforeStr=$str;}    $str = str_replace("&#039;" ,"'" , $str);    $str = str_replace("&#034;" ,'"' , $str);    $str = str_replace("&#180;" ,"?" , $str);    $str = str_replace("&#096;" ,'`' , $str);    $str = str_replace("&#063;" ,"?" , $str);    $str = str_replace("&deg;"  ,"°" , $str);    if ($debug) $after = strlen($str);    if ($debug) echo ("before ($beforeStr) / after ($str) $before / $after <br>");    return $str;}function saveText($t,$fn) {    $fp = fopen($fn, "w");    fwrite($fp, $t);    fclose($fp);}function loadText($fn) {    $fp = fopen($fn, "r");    $fs = filesize($fn);    $all = 1;    // by Blocks    if (!$all) {        $contents = '';        $i = 0;        while (!feof($fp)) {            $contents .= fread($fp, 8192);            $i++;            echo ("Block $i <br>");        }    } else {       // echo ("$fn $fs <br>");        $contents = fread($fp,$fs);        //echo (" read <br>");    }    fclose($fp);    //echo (" Close <br>");   // $t = "SELECT * FROM `cR_user`";    return $contents;}?>